<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" styles="unlocked" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="2.1.3" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:1; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:en-US; document-endnote-restart-section:1; document-footnote-restart-page:1; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:1">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="dc.format">application/x-abiword</m>
<m key="abiword.generator">AbiWord</m>
</metadata>
<history version="85" edit-time="1004350" last-saved="1092977387" uid="2c1855fc-dc3f-11d8-86fb-ba35075f709b">
<version id="20" started="1090542515" uid="1def0954-e35f-11d8-86fb-ba35075f709b" auto="0"/>
<version id="41" started="1091496431" uid="018b12f4-e4f3-11d8-8f50-b94c02db6155" auto="0"/>
<version id="66" started="1092331748" uid="c237343e-ed8f-11d8-9715-eecf509a4577" auto="0"/>
<version id="80" started="1092520052" uid="d1ab700a-ee80-11d8-972e-bee1623d9eed" auto="0"/>
<version id="84" started="1092637920" uid="c6e487e6-ef5d-11d8-972b-be379c0773a9" auto="0"/>
<version id="85" started="1092977387" uid="5cba7344-f264-11d8-9c8c-9a54e7882c77" auto="0"/>
</history>
<styles>
<s type="P" name="Normal" followedby="Current Settings" props="text-indent:0in; margin-top:0.1090in; margin-left:0pt; font-stretch:normal; line-height:1.000000; text-align:left; bgcolor:transparent; lang:en-US; dom-dir:ltr; margin-bottom:0pt; font-weight:normal; text-decoration:none; font-variant:normal; color:000000; text-position:normal; font-size:12pt; margin-right:0pt; font-style:normal; widows:2; font-family:Times New Roman"/>
<s followedby="Normal" name="Heading 1" basedon="Normal" type="P" props="margin-top:0.3056in; font-size:17pt; margin-bottom:0.0417in; line-height:1.000000; font-weight:bold; keep-with-next:1; font-family:Arial"/>
<s followedby="Normal" name="Heading 3" basedon="Normal" type="P" props="margin-top:0.3056in; font-size:12pt; margin-bottom:0.0417in; line-height:1.000000; font-weight:bold; keep-with-next:1; font-family:Arial"/>
<s followedby="Normal" name="Heading 2" basedon="Normal" type="P" props="margin-top:0.3056in; font-size:14pt; margin-bottom:0.0417in; line-height:1.000000; font-weight:bold; keep-with-next:1; font-family:Arial"/>
<s type="C" name="Emphasis" basedon="None" followedby="Current Settings" props="line-height:1.000000; ; text-decoration:underline ; text-decoration:underline ; color:000000; font-weight:normal; font-style:normal"/>
<s type="C" name="Code Inline" basedon="Normal" followedby="Current Settings" props="font-family:Courier New; font-stretch:normal; text-decoration:none; line-height:1.000000; font-size:10pt; font-variant:normal; font-weight:normal; font-style:normal; lang:en-US"/>
<s type="P" name="Code" basedon="Normal" followedby="Current Settings" props="text-indent:0in; orphans:2; margin-top:0.1097in; margin-left:0pt; list-decimal:.; line-height:1.000000; keep-with-next:no; text-align:left; list-style:None; bgcolor:transparent; lang:en-US; dom-dir:ltr; margin-bottom:0pt; font-weight:normal; text-decoration:none; font-variant:normal; color:000000; font-stretch:normal; font-style:normal; keep-together:yes; font-size:10pt; margin-right:0pt; start-value:1; widows:2; font-family:Courier New; list-delim:%L"/>
<s type="P" name="Property" basedon="Normal" followedby="Current Settings" props="font-family:Times New Roman; bgcolor:transparent; margin-left:0.0000in; margin-bottom:0pt; font-weight:bold; color:000000; text-align:left; margin-right:0.0000in; font-style:normal; margin-top:0pt"/>
<s type="P" name="Property Type" basedon="Normal" followedby="Current Settings" props="margin-top:0pt; color:000000; margin-left:0.0000in; margin-bottom:0pt; text-align:left; bgcolor:transparent; font-weight:normal; margin-right:0.0000in; font-style:italic"/>
<s type="P" name="Block Text" basedon="Normal" followedby="Current Settings" props="line-height:1.000000; margin-bottom:0.0813in; margin-left:1.0000in; margin-right:1.0000in"/>
<s type="P" name="Box List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Dingbats; line-height:1.000000; list-style:Box List; text-indent:-0.300000in"/>
<s type="P" name="Bullet List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Symbol; line-height:1.000000; list-style:Bullet List; text-indent:-0.300000in"/>
<s followedby="Normal" name="Chapter Heading" basedon="Numbered Heading 1" type="P" props="list-delim:Chapter %L.; field-color:transparent; start-value:1; margin-left:0.0in; tabstops:1.100000in/L0; text-indent:0.0in; line-height:1.000000; list-style:Numbered List; field-font:Arial"/>
<s followedby="Normal" name="Contents 1" basedon="Normal" type="P" props="list-delim:%L.; list-decimal:.; field-color:transparent; start-value:1; margin-left:0.5000in; field-font:NULL; line-height:1.000000; list-style:Numbered List; text-indent:-0.300000in"/>
<s followedby="Normal" name="Contents 2" basedon="Normal" type="P" props="list-delim:%L.; list-decimal:.; field-color:transparent; start-value:1; margin-left:1.0000in; field-font:NULL; line-height:1.000000; list-style:Numbered List; text-indent:-0.300000in"/>
<s followedby="Normal" name="Contents 3" basedon="Normal" type="P" props="list-delim:%L.; list-decimal:.; field-color:transparent; start-value:1; margin-left:1.5000in; field-font:NULL; line-height:1.000000; list-style:Numbered List; text-indent:-0.300000in"/>
<s followedby="Normal" name="Contents 4" basedon="Normal" type="P" props="list-delim:%L.; list-decimal:.; field-color:transparent; start-value:1; margin-left:2.0000in; field-font:NULL; line-height:1.000000; list-style:Numbered List; text-indent:-0.300000in"/>
<s followedby="Normal" name="Contents Header" basedon="Normal" type="P" props="margin-top:0.1667in; font-size:16pt; margin-bottom:0.0813in; font-weight:bold; line-height:1.000000; text-align:center; font-family:Arial; keep-with-next:1"/>
<s type="P" name="Dashed List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:NULL; line-height:1.000000; list-style:Dashed List; text-indent:-0.300000in"/>
<s type="P" name="Diamond List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Dingbats; line-height:1.000000; list-style:Diamond List; text-indent:-0.300000in"/>
<s type="C" name="Endnote Reference" basedon="None" followedby="Current Settings" props="text-position:superscript; line-height:1.000000; font-size:10pt"/>
<s type="C" name="Endnote Text" basedon="Normal" followedby="Current Settings" props="text-position:normal; line-height:1.000000"/>
<s type="C" name="Footnote Reference" basedon="None" followedby="Current Settings" props="text-position:superscript; line-height:1.000000; font-size:10pt"/>
<s type="C" name="Footnote Text" basedon="Normal" followedby="Current Settings" props="text-position:normal; line-height:1.000000; font-size:10pt"/>
<s type="P" name="Hand List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Dingbats; line-height:1.000000; list-style:Hand List; text-indent:-0.300000in"/>
<s followedby="Normal" name="Heading 4" basedon="Normal" type="P" props="margin-top:0.3056in; font-size:12pt; margin-bottom:0.0417in; line-height:1.000000; font-weight:bold; keep-with-next:1; font-family:Arial"/>
<s type="P" name="Heart List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Dingbats; line-height:1.000000; list-style:Heart List; text-indent:-0.300000in"/>
<s type="P" name="Implies List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Symbol; line-height:1.000000; list-style:Implies List; text-indent:-0.300000in"/>
<s type="P" name="Lower Case List" basedon="Numbered List" followedby="Current Settings" props="list-delim:%L); list-decimal:.; field-color:transparent; start-value:1; margin-left:0.5000in; field-font:NULL; line-height:1.000000; list-style:Lower Case List; text-indent:-0.300000in"/>
<s type="P" name="Lower Roman List" basedon="Normal" followedby="Current Settings" props="list-delim:%L; list-decimal:.; field-color:transparent; start-value:1; margin-left:0.5000in; field-font:NULL; line-height:1.000000; list-style:Lower Roman List; text-indent:-0.300000in"/>
<s followedby="Normal" name="Numbered Heading 1" basedon="Heading 1" type="P" props="list-delim:%L.; field-color:transparent; start-value:1; margin-left:0.0in; tabstops:0.299306in/L0; text-indent:0.0in; line-height:1.000000; list-style:Numbered List; field-font:Arial"/>
<s followedby="Normal" name="Numbered Heading 2" basedon="Heading 2" type="P" props="list-delim:%L.; field-color:transparent; start-value:1; margin-left:0.0in; tabstops:0.299306in/L0; text-indent:0.0in; line-height:1.000000; list-style:Numbered List; field-font:Arial"/>
<s followedby="Normal" name="Numbered Heading 3" basedon="Heading 3" type="P" props="list-delim:%L.; field-color:transparent; start-value:1; margin-left:0.0in; tabstops:0.299306in/L0; text-indent:0.0in; line-height:1.000000; list-style:Numbered List; field-font:Arial"/>
<s type="P" name="Numbered List" followedby="Current Settings" props="list-delim:%L.; list-decimal:.; field-color:transparent; start-value:1; margin-left:0.5000in; field-font:NULL; line-height:1.000000; list-style:Numbered List; text-indent:-0.300000in"/>
<s type="P" name="Plain Text" basedon="Normal" followedby="Current Settings" props="font-family:Courier New; line-height:1.000000"/>
<s followedby="Normal" name="Section Heading" basedon="Numbered Heading 1" type="P" props="list-delim:Section %L.; field-color:transparent; start-value:1; margin-left:0.0in; tabstops:1.100000in/L0; text-indent:0.0in; line-height:1.000000; list-style:Numbered List; field-font:Arial"/>
<s type="P" name="Square List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Dingbats; line-height:1.000000; list-style:Square List; text-indent:-0.300000in"/>
<s type="P" name="Star List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Dingbats; line-height:1.000000; list-style:Star List; text-indent:-0.300000in"/>
<s type="P" name="Tick List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Dingbats; line-height:1.000000; list-style:Tick List; text-indent:-0.300000in"/>
<s type="P" name="Triangle List" followedby="Current Settings" props="list-delim:%L; list-decimal:NULL; field-color:transparent; start-value:0; margin-left:0.5000in; field-font:Dingbats; line-height:1.000000; list-style:Triangle List; text-indent:-0.300000in"/>
<s type="P" name="Upper Case List" basedon="Numbered List" followedby="Current Settings" props="list-delim:%L); list-decimal:.; field-color:transparent; start-value:1; margin-left:0.5000in; field-font:NULL; line-height:1.000000; list-style:Upper Case List; text-indent:-0.300000in"/>
<s type="P" name="Upper Roman List" basedon="Numbered List" followedby="Current Settings" props="list-delim:%L; list-decimal:.; field-color:transparent; start-value:1; margin-left:0.5000in; field-font:NULL; line-height:1.000000; list-style:Upper Roman List; text-indent:-0.300000in"/>
</styles>
<lists>
<l id="1000" parentid="0" type="5" start-value="0" list-delim="%L" list-decimal="NULL"/>
<l id="1009" parentid="0" type="5" start-value="0" list-delim="%L" list-decimal="NULL"/>
<l id="1056" parentid="0" type="0" start-value="1" list-delim="%L." list-decimal="."/>
<l id="1118" parentid="0" type="0" start-value="1" list-delim="%L." list-decimal="."/>
<l id="1544" parentid="0" type="5" start-value="0" list-delim="%L" list-decimal="NULL"/>
<l id="1548" parentid="0" type="0" start-value="1" list-delim="%L." list-decimal="."/>
</lists>
<pagesize pagetype="A4" orientation="portrait" width="210.000000" height="297.000000" units="mm" page-scale="1.000000"/>
<section>
<p props="text-align:center; font-weight:bold; text-decoration:underline; font-family:Arial; font-size:24pt"><c props="font-weight:bold; text-decoration:underline; font-family:Arial; font-size:24pt">Vexi Core Reference</c></p>
<p props="text-align:center; font-weight:normal; font-family:Arial; font-size:16pt"></p>
<p props="font-family:Arial; margin-top:0.0000in; margin-left:0.0000in; dom-dir:ltr; text-indent:0.0000in; text-align:center; font-weight:normal; margin-right:0.0000in; margin-bottom:0.0000in; line-height:1.000000; font-size:16pt"><c props="font-family:Arial; font-size:16pt; lang:en-US; text-position:normal; font-weight:normal; font-style:normal; text-decoration:none">Vexi Platform 1.0 Release</c></p>
<p props="font-family:Arial; margin-top:0.0000in; margin-left:0.0000in; dom-dir:ltr; text-indent:0.0000in; text-align:center; font-weight:normal; margin-right:0.0000in; margin-bottom:0.0000in; line-height:1.000000; font-size:16pt"></p>
<p props="font-family:Arial; margin-top:0.0000in; margin-left:0.0000in; dom-dir:ltr; text-indent:0.0000in; text-align:center; font-weight:normal; margin-right:0.0000in; margin-bottom:0.0000in; line-height:1.000000; font-size:16pt"><c props="font-family:Arial; font-size:16pt; lang:en-US; text-position:normal; font-weight:normal; font-style:normal; text-decoration:none">Charles Goodwin</c></p>
<p props="font-family:Arial; margin-top:0.0000in; margin-left:0.0000in; dom-dir:ltr; text-indent:0.0000in; text-align:center; font-weight:normal; margin-right:0.0000in; margin-bottom:0.0000in; line-height:1.000000; font-size:16pt"><c props="font-family:Arial; font-size:16pt; lang:en-US; text-position:normal; font-weight:normal; font-style:normal; text-decoration:none">charlie@vexi.org</c></p>
<p props="font-family:Arial; margin-top:0.0000in; margin-left:0.0000in; dom-dir:ltr; text-indent:0.0000in; text-align:center; font-weight:normal; margin-right:0.0000in; margin-bottom:0.0000in; line-height:1.000000; font-size:16pt"></p>
<p props="font-family:Arial; margin-top:0.0000in; margin-left:0.0000in; dom-dir:ltr; text-indent:0.0000in; text-align:center; font-weight:normal; margin-right:0.0000in; margin-bottom:0.0000in; line-height:1.000000; font-size:16pt"><c props="font-family:Arial; font-size:16pt; lang:en-US; text-position:normal; font-weight:normal; font-style:normal; text-decoration:none">15th August 2004</c></p>
<p props="font-family:Arial; margin-top:0.0000in; margin-left:0.0000in; dom-dir:ltr; text-indent:0.0000in; text-align:center; font-weight:normal; margin-right:0.0000in; margin-bottom:0.0000in; line-height:1.000000; font-size:16pt"></p>
<p props="font-family:Arial; margin-top:0.0000in; margin-left:0.0000in; dom-dir:ltr; text-indent:0.0000in; text-align:center; font-weight:normal; margin-right:0.0000in; margin-bottom:0.0000in; line-height:1.000000; font-size:16pt"><c props="font-family:Arial; font-size:16pt; lang:en-US; text-position:normal; font-weight:normal; font-style:normal; text-decoration:none">Reference Version 1.0pre3</c></p>
<p style="Normal"><pbr/></p>
<toc>
</toc><p style="Normal"></p>
<p style="Heading 1"><pbr/>Preface</p>
<p style="Heading 3">About This Document</p>
<p style="Normal">The goal of this document is to describe the Vexi Core <c props="lang:en-GB">behaviour in detail, to facilitate development usage of the Vexi Core.  This document is not a tutorial, and unsuitable for people unfamiliar with Vexi.  Neither is it a specification and hence may not provide enough  detail for a reimplementing Vexi, the Core or the Platform.</c></p>
<p style="Normal" props="lang:en-GB"><c props="lang:en-GB">Any queries regarding this document or about Vexi should be sent to the users@vexi.org mailing list, which can be subscribed to from http://lists.vexi.org on the Vexi website.</c></p>
<p style="Heading 3">Vexi Platform Components</p>
<p level="1" listid="1000" parentid="0" style="Normal" props="start-value:0; lang:en-GB; text-indent:-0.3000in; list-style:Bullet List; field-font:Symbol; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	</c><c props="lang:en-GB">Platform		The combination of the following components</c></p>
<p level="1" listid="1000" parentid="0" style="Normal" props="start-value:0; lang:en-GB; text-indent:-0.3000in; list-style:Bullet List; field-font:Symbol; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	Core			The native core (or Java byte-code) that powers the UI</c></p>
<p level="1" listid="1000" parentid="0" style="Normal" props="start-value:0; lang:en-GB; text-indent:-0.3000in; list-style:Bullet List; field-font:Symbol; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	Launcher		A small mini-application that "shoehorns" the Core onto the<br/>			client PC and is beyond the scope of this document</c></p>
<p level="1" listid="1000" parentid="0" style="Normal" props="start-value:0; lang:en-GB; text-indent:-0.3000in; list-style:Bullet List; field-font:Symbol; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	UI / Application	The set of files, bundled as a zip file with a ".vexi" extension,<br/>			that are used to create and control a Vexi UI</c></p>
<p level="1" listid="1000" parentid="0" style="Normal" props="start-value:0; lang:en-GB; text-indent:-0.3000in; list-style:Bullet List; field-font:Symbol; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-GB; font-style:normal; color:000000; homogeneous:1; bgcolor:transparent; font-size:12pt; text-decoration:none; list-style:Bullet List; height:0in; text-position:normal; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-GB; font-style:normal; color:000000; homogeneous:1; bgcolor:transparent; font-size:12pt; text-decoration:none; list-style:Bullet List; height:0in; text-position:normal; font-stretch:normal">	Widgets		An official set of Vexi UI files that provide usable widgets<br/>			for use in Vexi applications</c></p>
<p style="Heading 3"><c props="height:0in; display:inline; width:0in; homogeneous:1">Required Knowledge</c></p>
<p level="1" listid="1544" parentid="0" style="Normal" props="start-value:0; lang:en-GB; text-indent:-0.3000in; list-style:Bullet List; field-font:Symbol; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-GB; font-style:normal; list-style:Bullet List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-GB; font-style:normal; list-style:Bullet List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal">	ECMAScript</c><c props="height:0in; display:inline; lang:en-GB; width:0in; text-position:normal; homogeneous:1"> / Javascript	ECMAScript (aka Javascript) controls Vexi UI behaviour</c></p>
<p level="1" listid="1544" style="Normal" props="list-delim:%L; list-decimal:.; list-style:Bullet List; start-value:0; margin-left:0.5000in; lang:en-GB; text-indent:-0.3000in; field-font:Symbol"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-GB; font-style:normal; list-style:Bullet List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-GB; font-style:normal; list-style:Bullet List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal">	</c><c props="height:0in; display:inline; lang:en-GB; width:0in; text-position:normal; homogeneous:1">XML				Vexi UIs are described using XML</c></p>
<p style="Heading 3"><c props="height:0in; display:inline; width:0in; homogeneous:1">Key Concepts</c></p>
<p level="1" listid="1009" parentid="0" style="Normal" props="start-value:0; lang:en-GB; text-indent:-0.3000in; list-style:Bullet List; field-font:Symbol; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	VexiScript		The enhanced version of ECMAScript used by Vexi</c></p>
<p level="1" listid="1009" parentid="0" style="Normal" props="start-value:0; lang:en-GB; text-indent:-0.3000in; list-style:Bullet List; field-font:Symbol; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Bullet List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	Put / Write		In VexiScript, when you change the value of something you are<br/>		</c><c props="width:0in; font-family:Times New Roman; display:inline; homogeneous:1; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; font-variant:normal; text-decoration:none; bgcolor:transparent; list-style:Bullet List; color:000000; height:0in; font-size:12pt; font-stretch:normal">	putting or writing to it e.g. 'foo = 5' puts 5 to 'foo'</c></p>
<p level="1" listid="1009" parentid="0" style="Normal" props="margin-top:0.0000in; list-decimal:NULL; margin-left:0.5000in; dom-dir:ltr; text-indent:-0.2993in; list-style:Bullet List; list-delim:%L; lang:en-GB; margin-right:0.0000in; margin-bottom:0.0000in; line-height:1.000000; text-align:left; start-value:0; field-font:Symbol"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:None; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; homogeneous:1; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; font-variant:normal; text-decoration:none; bgcolor:transparent; list-style:Bullet List; color:000000; height:0in; font-size:12pt; font-stretch:normal">	G</c><c props="width:0in; font-family:Times New Roman; display:inline; color:000000; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; font-variant:normal; list-style:Bullet List; bgcolor:transparent; text-decoration:none; homogeneous:1; height:0in; font-size:12pt; font-stretch:normal">et / Read		In VexiScript, when you access the value of something you are<br/>			getting or reading it e.g. 'return bar' reads (then returns) 'bar'</c></p>
<p style="Heading 3"><c props="height:0in; display:inline; width:0in; homogeneous:1">Application Life-Cycle</c></p>
<p style="Normal" props="margin-top:0.0000in; margin-left:0pt; text-indent:0in; dom-dir:ltr; margin-bottom:0.0000in; lang:en-GB; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="width:0in; font-family:Times New Roman; display:inline; font-style:normal; font-weight:normal; text-position:normal; lang:en-GB; text-decoration:none; color:000000; bgcolor:transparent; font-variant:normal; homogeneous:1; height:0in; font-size:12pt; font-stretch:normal">&lt;describe the life-cycle of a Vexi application, with diagram&gt;</c></p>
<p style="Heading 1" props="lang:en-GB"><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1"><pbr/>Vexi Fundamentals</c></p>
<p style="Heading 2" props="lang:en-GB"><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">Boxes</c></p>
<p style="Normal" props="lang:en-GB"><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">The fundamental building block for Vexi UIs is the box.</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">A box may contain other boxes, which is referred to as the parent-child relationship.  This is a one-to-many relationship; a </c><c style="Emphasis" props="height:0in; display:inline; width:0in; homogeneous:1">parent box</c><c props="height:0in; display:inline; width:0in; homogeneous:1"> may contain many children, but a </c><c style="Emphasis" props="height:0in; display:inline; width:0in; homogeneous:1">child box</c><c props="height:0in; display:inline; width:0in; homogeneous:1"> can only have one parent.  A box may be a parent, or a child, or both, or neither.  A parent-less box is considered an </c><c style="Emphasis" props="height:0in; display:inline; width:0in; homogeneous:1">orphan</c><c props="height:0in; display:inline; width:0in; homogeneous:1">.</c></p>
<p style="Normal" props="lang:en-GB"><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">The parent of a box and any subsequent parents are referred to as the </c><c style="Emphasis" props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">ascendants</c><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1"> of the subject box.  The children of a box and any subsequent children of the child boxes are referred to as </c><c style="Emphasis" props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">descendants</c><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1"> of the subject box.</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">The combination of a box and it's ascendants and descendants is referred to as a box tree.  The top box of a box tree is referred to as a </c><c style="Emphasis" props="height:0in; display:inline; width:0in; homogeneous:1">root box</c><c props="height:0in; display:inline; width:0in; homogeneous:1"> or a </c><c style="Emphasis" props="height:0in; display:inline; width:0in; homogeneous:1">surface box</c><c props="height:0in; display:inline; width:0in; homogeneous:1">.</c></p>
<p style="Normal" props="lang:en-GB"><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">There are three ways in which to consider a box:</c></p>
<p level="1" listid="1056" parentid="0" style="Normal" props="start-value:1; lang:en-GB; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	Visual Representation		As a rendered object on-screen</c></p>
<p level="1" listid="1056" parentid="0" style="Normal" props="start-value:1; lang:en-GB; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	Object Representation		As a VexiScript object</c></p>
<p level="1" listid="1056" parentid="0" style="Normal" props="start-value:1; lang:en-GB; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	XML Representation		As an XML node (tag)</c></p>
<p style="Normal" props="lang:en-GB; text-indent:0in; margin-left:0pt"><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-GB; font-style:normal; color:000000; bgcolor:transparent; font-size:12pt; text-decoration:none; homogeneous:1; height:0in; text-position:normal; font-stretch:normal">Boxes are encapsulated objects.  That means a child box has no direct way of accessing or ascertaining information about it's parent.</c></p>
<p style="Normal" props="lang:en-GB; text-indent:0in; margin-left:0pt"><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-GB; font-style:normal; color:000000; bgcolor:transparent; font-size:12pt; text-decoration:none; homogeneous:1; height:0in; text-position:normal; font-stretch:normal">New boxes are created using the &lt;ui:box /&gt; XML tag or by reading from vexi.box (the box property on the Vexi Object).</c></p>
<p style="Heading 2" props="lang:en-GB"><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">Surfaces</c></p>
<p style="Normal" props="lang:en-GB"><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">A top-level window in a Vexi UI is referred to as a </c><c style="Emphasis" props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">surface</c><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">.  There are four kinds of surfaces available to Vexi applications (see the Vexi Object for information on creating surfaces):</c></p>
<p level="1" listid="1118" parentid="0" style="Normal" props="start-value:1; lang:en-GB; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	Frame		A fully-fledged application window decorated<br/>		with platform specific borders and buttons</c></p>
<p level="1" listid="1118" parentid="0" style="Normal" props="start-value:1; lang:en-GB; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	Window	A fully-fledged application window but without<br/></c><c props="width:0in; font-family:Times New Roman; display:inline; homogeneous:1; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; font-variant:normal; text-decoration:none; bgcolor:transparent; list-style:Numbered List; color:000000; height:0in; font-size:12pt; font-stretch:normal">		any decorations</c></p>
<p level="1" listid="1118" parentid="0" style="Normal" props="start-value:1; lang:en-GB; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	Dialog		A modal dialog attached to an application<br/>		window, with platform-specific decorations</c></p>
<p level="1" listid="1118" parentid="0" style="Normal" props="start-value:1; lang:en-GB; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-GB; font-style:normal; list-style:Numbered List; homogeneous:1; bgcolor:transparent; text-decoration:none; color:000000; height:0in; font-size:12pt; font-stretch:normal">	Popup		A modal dialog, attached to an application<br/>		window, but without any decorations</c></p>
<p style="Normal" props="lang:en-GB; text-indent:0in; margin-left:0pt"><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">All surfaces are </c><c style="Emphasis" props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">scarred</c><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1"> for security reasons.  See the appendix on Security Precautions for further information on surface scarring.</c></p>
<p style="Normal" props="lang:en-GB; text-indent:0in; margin-left:0pt"><c props="lang:en-GB; display:inline; height:0in; width:0in; homogeneous:1">Whenever we refer to the size or position of a surface box, we refer to the UI accessible portion of the surface, disregarding any platform specific decoration.  This has the caveat that if you set the position of a frame or dialog to (0,0) then the platform specific title-bar will be placed off-screen.</c></p>
<p style="Normal" props="text-indent:0in; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Surface boxes are not directly accessible as VexiScript objects to any descendants of a surface box.  However, every box has a object, accessed as '</c><c style="Code Inline" props="height:0in; display:inline; width:0in; homogeneous:1">surface</c><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">', associated with it which is know as the </c><c style="Code Inline" props="height:0in; display:inline; width:0in; homogeneous:1">surface object</c><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">.  Whenever reading this object, the Core recursively reads the surface object of the parent and returns a value when it is encountered.</c><c props="width:0in; font-family:Times New Roman; display:inline; color:000000; font-weight:normal; lang:en-US; font-style:normal; text-decoration:none; homogeneous:1; font-size:12pt; height:0in; text-position:normal">  When a box changes surface, including addition and removal, then 'true' is put to the value of this object, and the surface object will read the value of the new surface object.  By default, there is no value for the surface object; this is implemented in widget space.</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Templates</c></p>
<p style="Normal" props="text-indent:0in; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Boxes are combined to form more useful widgets using templates.  Templates are defined using XML files with the .t extension.</c></p>
<p style="Normal" props="text-indent:0in; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">The root node of a template is always &lt;vexi /&gt;.  Any non-XML content in the vexi node is interpreted as VexiScript and forms the static portion of a template.  The static content of a template is executed only once when the template is first used.  Any reference to the static content of a template is referring to the same object.</c></p>
<p style="Normal" props="text-indent:0in; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">The vexi node can contain the following XML nodes:</c></p>
<p level="1" listid="1548" parentid="0" style="Normal" props="start-value:1; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-US; font-style:normal; list-style:Numbered List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-US; font-style:normal; list-style:Numbered List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal">	&lt;ui:box /&gt;</c></p>
<p level="1" listid="1548" parentid="0" style="Normal" props="start-value:1; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-US; font-style:normal; list-style:Numbered List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-US; font-style:normal; list-style:Numbered List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal">	Another template e.g. &lt;.path.to.valid.template /&gt;</c></p>
<p level="1" listid="1548" parentid="0" style="Normal" props="start-value:1; text-indent:-0.3000in; list-style:Numbered List; field-font:NULL; margin-left:0.5000in"><field type="list_label" props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-US; font-style:normal; list-style:Numbered List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal"></field><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; lang:en-US; font-style:normal; list-style:Numbered List; text-decoration:none; bgcolor:transparent; font-size:12pt; color:000000; homogeneous:1; height:0in; text-position:normal; font-stretch:normal">	Any custom node using the meta namespace e.g. &lt;meta:foo /&gt;</c></p>
<p style="Normal" props="text-indent:0in; margin-left:0pt"><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-US; font-style:normal; text-decoration:none; bgcolor:transparent; homogeneous:1; font-size:12pt; height:0in; color:000000; font-stretch:normal">Of the non-meta namespace nodes, only one can have content.  The single tag nodes are pre- or post-applied to the template in the order in which they are defined.</c></p>
<p style="Normal" props="text-indent:0in; margin-left:0pt"><c props="width:0in; font-family:Times New Roman; display:inline; font-variant:normal; font-weight:normal; text-position:normal; lang:en-US; font-style:normal; text-decoration:none; bgcolor:transparent; homogeneous:1; font-size:12pt; height:0in; color:000000; font-stretch:normal">Example:</c></p>
<p style="Code"><c props="height:0in; display:inline; width:0in; homogeneous:1">&lt;vexi xmlns:namespace1=".name.space.one"&gt;<br/>	&lt;meta:doc&gt;I wrote this!&lt;/meta:doc&gt;<br/><br/>	// static content goes here<br/></c><br/>	&lt;.name.space.two.foo /&gt;<br/>	&lt;namespace1:bar /&gt;<c props="height:0in; display:inline; width:0in; homogeneous:1"><br/>	&lt;ui:box&gt;<br/><br/>		// regular content goes here<br/><br/>	&lt;/ui:box&gt;<br/>&lt;/vexi&gt;</c></p>
<p style="Heading 1"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1"><pbr/>The Box Model: Layout and Rendering</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Box Semantics</c></p>
<p style="Normal"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">A box can have 0 or more child boxes.  Child boxes are assigned an index based on their order within the parent, which is numbered '0' (for the first child) to 'n-1' (for the last child).</c></p>
<p style="Normal"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">A parent box has the numerical properties 'cols' and 'rows'.  If one is set to a value greater than '0', the other is set to '0'.  If one is set to '0', the other is set to '1'.  The value of one of either cols or rows for a box is always 0; they can never be simultaneously greater than 0.  Whichever of the 'cols' or 'rows' properties has a value greater than zero</c><c props="width:0in; font-family:Times New Roman; display:inline; color:000000; font-weight:normal; lang:en-US; font-style:normal; text-decoration:none; homogeneous:1; font-size:12pt; height:0in; text-position:normal"> will always read that value and</c><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1"> is considered the constraint for packing child boxes into columns and rows, with the property whose value is '0' being dynamic with no limits.</c></p>
<p style="Normal"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Child boxes are either packed or non-packed, defined by the boolean property packed.</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Packed Boxes</c></p>
<p style="Normal"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">A packed box is a box whose packed property is true.</c></p>
<p style="Normal" props="margin-top:0.1111in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="width:0in; font-family:Times New Roman; display:inline; homogeneous:1; font-weight:normal; lang:en-US; font-style:normal; text-position:normal; text-decoration:none; height:0in; font-size:12pt">Packed boxes are placed, in order, into columns and rows.  If the constraining property on the parent box is 'cols' then packing is done by placing the next child box into the next available column space, otherwise it is done by row.</c></p>
<p style="Normal"><c props="width:0in; font-family:Times New Roman; display:inline; color:000000; font-weight:normal; lang:en-US; font-style:normal; text-decoration:none; homogeneous:1; text-position:normal; height:0in; font-size:12pt">A packed box's width is set to the aggregation of the widths of the columns it spans.  If this width exceeds the box's maxwidth, if it's hshrink property is false, or the box's content width, if it's hshrink property is true, then the box is sized to it's maxwidth or content width respectively and then aligned horizontally according to it's align attribute within the space occupied by it's spanned columns.  </c>This is then repeated for rows and height.</p>
<p style="Heading 2"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Non-packed Boxes</c></p>
<p style="Normal"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">A non-packed box is a box whose packed property is false.</c></p>
<p style="Normal"><c props="width:0in; font-family:Times New Roman; display:inline; color:000000; font-weight:normal; lang:en-US; font-style:normal; text-decoration:none; homogeneous:1; text-position:normal; height:0in; font-size:12pt">Non-packed boxes are placed within the parent, irrespective of the parents columns and rows, according to their align property and are offset by their x and y properties.</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Grid Layout</c></p>
<p style="Normal" props="font-style:italic"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1; font-style:italic">Note: [ brackets ] are added for clarity only.</c></p>
<p style="Normal" props="text-align:left; text-indent:0in; dom-dir:ltr; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">A box's </c><c style="Emphasis" props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">content width</c><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1"> is the maximum of [ the minimum of </c><c props="width:0in; font-family:Times New Roman; display:inline; color:000000; font-weight:normal; lang:en-US; font-style:normal; text-decoration:none; homogeneous:1; font-size:12pt; height:0in; text-position:normal">the aggregation of it's columns' minimum widths</c><c props="width:0in; font-family:Times New Roman; display:inline; color:000000; font-weight:normal; lang:en-US; font-style:normal; text-decoration:none; homogeneous:1; text-position:normal; height:0in; font-size:12pt"> and the box's maxwidth property ] and the box's minwidth property</c><c props="width:0in; font-family:Times New Roman; display:inline; color:000000; font-weight:normal; lang:en-US; font-style:normal; text-decoration:none; homogeneous:1; font-size:12pt; height:0in; text-position:normal">.</c></p>
<p style="Normal" props="text-align:left; text-indent:0in; dom-dir:ltr; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">A column's </c><c style="Emphasis" props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">minimum width</c><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1"> is the maximum content width of all the boxes in that column.</c></p>
<p style="Normal" props="text-align:left; text-indent:0in; dom-dir:ltr; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">A column's </c><c style="Emphasis" props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">maximum width</c><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1"> is the maximum of [ the maximum maxwidth from each of the column's boxes whose hshrink property is false ] and [ the maximum content width from each of the column's boxes whose hshrink property is true ], but a column's maximum width is never smaller than it's minimum width.</c></p>
<p style="Normal" props="text-align:left; text-indent:0in; dom-dir:ltr; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">A box with colspan occupying several columns will never affect the minimum or maximum width of a column any more than is necessary to render the box according to it's minwidth and maxwidth properties.  A box with colspan will only ever affect the last column it spans.</c></p>
<p style="Normal" props="text-align:left; text-indent:0in; dom-dir:ltr; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">A column's </c><c style="Emphasis" props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">actual width</c><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1"> is then determined by the space available in the parent, but will never be less than the column's minimum width.  If the aggregation of the columns' maximum widths is less than the parent box's maxwidth then the remaining space, also called 'slack', is spread equally over the columns.</c></p>
<p style="Normal" props="text-align:left; text-indent:0in; dom-dir:ltr; margin-left:0pt"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">This is all then repeated for rows and height.</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Further Information on Vexi Grid Layout</c></p>
<p style="Normal"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">The Vexi Core grid layout engine is scalable with regards to columns, rows, and spanning children.  What this means is that the grid layout for a parent box with 10,000 columns and a child spanning 10,000 columns will</c><c props="height:0in; display:inline; lang:en-US; font-weight:normal; width:0in; homogeneous:1"> be calculated as fast as the </c><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">single column equivalent.</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Box Rendering</c></p>
<p style="Normal"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">Boxes are rendering "back to front" in Vexi, with parents being placed behind children and children rendered in order of index.  Only the minimum area needed to update the screen to reflect the current box tree contained in a surface will be rendered at any given time.</c></p>
<p style="Normal"><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">They way a box is rendered is controlled by it's </c><c style="Emphasis" props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">rendering properties</c><c props="height:0in; display:inline; lang:en-US; width:0in; homogeneous:1">.  These control how a box adapts to the space provided and the children inside of it.</c></p>
<p style="Heading 1"><c props="height:0in; display:inline; width:0in; homogeneous:1"><pbr/>Box Properties</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">A box is also accessible as a VexiScript object, and with key-value pairs that can be used to control the behaviour of a box.</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; width:0in; homogeneous:1">Layout</c></p>
<p style="Normal"></p>
<table props="list-tag:1; bot-style:0; bot-color:000000; top-style:0; top-color:000000; right-style:0; right-color:000000; bg-style:1; left-style:0; left-color:000000">
<cell props="bot-attach:1; left-attach:0; right-attach:1; top-attach:0">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:1; left-attach:1; right-attach:2; top-attach:0">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:1; left-attach:2; right-attach:3; top-attach:0">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:2; left-attach:0; right-attach:1; top-attach:1">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:2; left-attach:1; right-attach:2; top-attach:1">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:2; left-attach:2; right-attach:3; top-attach:1">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:3; left-attach:0; right-attach:1; top-attach:2">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:3; left-attach:1; right-attach:2; top-attach:2">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:3; left-attach:2; right-attach:3; top-attach:2">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:4; left-attach:0; right-attach:1; top-attach:3">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:4; left-attach:1; right-attach:2; top-attach:3">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:4; left-attach:2; right-attach:3; top-attach:3">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:5; left-attach:0; right-attach:1; top-attach:4">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:5; left-attach:1; right-attach:2; top-attach:4">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:5; left-attach:2; right-attach:3; top-attach:4">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:6; left-attach:0; right-attach:1; top-attach:5">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:6; left-attach:1; right-attach:2; top-attach:5">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:6; left-attach:2; right-attach:3; top-attach:5">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:7; left-attach:0; right-attach:1; top-attach:6">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:7; left-attach:1; right-attach:2; top-attach:6">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:7; left-attach:2; right-attach:3; top-attach:6">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:8; left-attach:0; right-attach:1; top-attach:7">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:8; left-attach:1; right-attach:2; top-attach:7">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:8; left-attach:2; right-attach:3; top-attach:7">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:9; left-attach:0; right-attach:1; top-attach:8">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:9; left-attach:1; right-attach:2; top-attach:8">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:9; left-attach:2; right-attach:3; top-attach:8">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:10; left-attach:0; right-attach:1; top-attach:9">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:10; left-attach:1; right-attach:2; top-attach:9">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:10; left-attach:2; right-attach:3; top-attach:9">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:11; left-attach:0; right-attach:1; top-attach:10">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:11; left-attach:1; right-attach:2; top-attach:10">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:11; left-attach:2; right-attach:3; top-attach:10">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:12; left-attach:0; right-attach:1; top-attach:11">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:12; left-attach:1; right-attach:2; top-attach:11">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:12; left-attach:2; right-attach:3; top-attach:11">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:13; left-attach:0; right-attach:1; top-attach:12">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:13; left-attach:1; right-attach:2; top-attach:12">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:13; left-attach:2; right-attach:3; top-attach:12">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:14; left-attach:0; right-attach:1; top-attach:13">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:14; left-attach:1; right-attach:2; top-attach:13">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:14; left-attach:2; right-attach:3; top-attach:13">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:15; left-attach:0; right-attach:1; top-attach:14">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:15; left-attach:1; right-attach:2; top-attach:14">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:15; left-attach:2; right-attach:3; top-attach:14">
<p style="Normal"></p>
</cell>
</table>
<p style="Normal"></p>
<p style="Heading 2"><c props="height:0in; display:inline; width:0in; homogeneous:1">Rendering</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">These properties effect how a box is visually presented on-screen.</c></p>
<p style="Normal"></p>
<table props="table-row-heights:0.1875in/0.1875in/0.1875in/0.1875in/0.2500in/0.1875in/; list-tag:1; bg-style:1; left-color:000000; bot-style:0; bot-thickness:0.003472in; table-column-props:1.0000in/1.1250in/4.1250in/; left-thickness:0.003472in; right-thickness:0.003472in; right-color:000000; top-color:000000; left-style:0; bot-color:000000; top-thickness:0.003472in; right-style:0; top-style:0">
<cell props="bot-attach:1; left-attach:0; right-attach:1; top-attach:0">
<p style="Normal">Property</p>
</cell>
<cell props="bot-attach:1; left-attach:1; right-attach:2; top-attach:0">
<p>Default Value</p>
</cell>
<cell props="bot-attach:1; left-attach:2; right-attach:3; top-attach:0">
<p style="Normal">Description</p>
</cell>
<cell props="bot-attach:2; left-attach:0; right-attach:1; top-attach:1">
<p style="Property">fill</p>
<p style="Property Type">(string)</p>
</cell>
<cell props="bot-attach:2; left-attach:1; right-attach:2; top-attach:1">
<p></p>
</cell>
<cell props="bot-attach:2; left-attach:2; right-attach:3; top-attach:1">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:3; left-attach:0; right-attach:1; top-attach:2">
<p style="Property">font</p>
<p style="Property Type">(stream)</p>
</cell>
<cell props="bot-attach:3; left-attach:1; right-attach:2; top-attach:2">
<p></p>
</cell>
<cell props="bot-attach:3; left-attach:2; right-attach:3; top-attach:2">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:4; left-attach:0; right-attach:1; top-attach:3">
<p style="Property">fontsize</p>
<p style="Property Type">(int)</p>
</cell>
<cell props="bot-attach:4; left-attach:1; right-attach:2; top-attach:3">
<p></p>
</cell>
<cell props="bot-attach:4; left-attach:2; right-attach:3; top-attach:3">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:5; left-attach:0; right-attach:1; top-attach:4">
<p style="Property">text</p>
<p style="Property Type">(string)</p>
</cell>
<cell props="bot-attach:5; left-attach:1; right-attach:2; top-attach:4">
<p></p>
</cell>
<cell props="bot-attach:5; left-attach:2; right-attach:3; top-attach:4">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:6; left-attach:0; right-attach:1; top-attach:5">
<p style="Property">textcolor</p>
<p style="Property Type">(string)</p>
</cell>
<cell props="bot-attach:6; left-attach:1; right-attach:2; top-attach:5">
<p></p>
</cell>
<cell props="bot-attach:6; left-attach:2; right-attach:3; top-attach:5">
<p style="Normal"></p>
</cell>
<cell props="bot-attach:7; left-attach:0; right-attach:1; top-attach:6">
<p style="Property">path</p>
<p style="Property Type">(string)</p>
</cell>
<cell props="bot-attach:7; left-attach:1; right-attach:2; top-attach:6">
<p></p>
</cell>
<cell props="bot-attach:7; left-attach:2; right-attach:3; top-attach:6">
<p></p>
</cell>
<cell props="bot-attach:8; left-attach:0; right-attach:1; top-attach:7">
<p style="Property">strokecolor</p>
<p style="Property Type">(string)</p>
</cell>
<cell props="bot-attach:8; left-attach:1; right-attach:2; top-attach:7">
<p></p>
</cell>
<cell props="bot-attach:8; left-attach:2; right-attach:3; top-attach:7">
<p></p>
</cell>
<cell props="bot-attach:9; left-attach:0; right-attach:1; top-attach:8">
<p style="Property">strokewidth</p>
<p style="Property Type">(string)</p>
</cell>
<cell props="bot-attach:9; left-attach:1; right-attach:2; top-attach:8">
<p></p>
</cell>
<cell props="bot-attach:9; left-attach:2; right-attach:3; top-attach:8">
<p></p>
</cell>
</table>
<p style="Normal"></p>
<p style="Heading 1"><c props="height:0in; display:inline; width:0in; homogeneous:1"><pbr/>VexiScript</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; width:0in; homogeneous:1">About VexiScript</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">VexiScript is an adaptation of ECMAScript, Standard ECMA-262, which is most popularly implemented as Javascript.  VexiScript implements a few additional features to ECMAScript.  There are also some omissions and inconsistencies between VexiScript and ECMAScript.</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">A familiarity with ECMAScript / Javascript syntax is assumed.</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; width:0in; homogeneous:1">Declare Before Use</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">In VexiScript any variables must be declared before they can be used.</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">Private variables are initialized using the '</c><c style="Code Inline" props="height:0in; display:inline; width:0in; homogeneous:1">var</c><c props="height:0in; display:inline; width:0in; homogeneous:1">' keyword:</c></p>
<p style="Code"><c props="height:0in; display:inline; width:0in; homogeneous:1">// a private variable<br/>var my_var = "only my scope can see me";</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">Public variables, also known as box properties, are initialized using the '</c><c style="Code Inline" props="height:0in; display:inline; width:0in; homogeneous:1">thisbox</c><c props="height:0in; display:inline; width:0in; homogeneous:1">' keyword:</c></p>
<p style="Code">// a box property (public variable)<br/>thisbox.my_prop = "any box can see this";</p>
<p style="Normal">Box properties only need to be declared once per box, and the standard box properties are already declared by the Core.</p>
<p style="Heading 2"><c props="height:0in; display:inline; width:0in; homogeneous:1">Traps</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">Traps are a feature unique to Vexi and it's predecessors.  They can be likened to events, except the work on any property and events are just one application of traps.  The basic concept is that whenever something that is trapped is accessed, a trap is fired.  There are two types of access and hence two types of traps: read traps and write traps.</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">Traps are assigned using the '</c><c style="Code Inline" props="height:0in; display:inline; width:0in; homogeneous:1">++=</c><c props="height:0in; display:inline; width:0in; homogeneous:1">' syntax.  This is peculiar to VexiScript, and hence not part of ECMAScript.  You can assign traps either anonymously or by reference:</c></p>
<p style="Code"><c props="height:0in; display:inline; width:0in; homogeneous:1">// assign an anonymous trap<br/>$box.some_prop ++= function(v) { /* do something */ }<br/><br/>// assign a referenced trap<br/>var some_trap = function(v) { /* do something */ }<br/>$box.some_prop ++= some_trap;</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">Traps can be unassigned using the '</c><c style="Code Inline">--=</c><c props="height:0in; display:inline; width:0in; homogeneous:1">' syntax.  You can easily unassign referenced traps:</c></p>
<p style="Code"><c props="height:0in; display:inline; width:0in; homogeneous:1">// unassign a referenced trap<br/>$box.some_prop --= some_trap;</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">You can only unassign anonymous traps from within themselves using the 'callee' keyword:</c></p>
<p style="Code"><c props="height:0in; display:inline; width:0in; homogeneous:1">// unassign an anonymous trap<br/>$box.some_prop ++= function(v) {<br/>    $box.some_prop --= callee;<br/>}</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; width:0in; homogeneous:1">Read Traps</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">Read traps are executed whenever a property is read in VexiScript.  Read traps are created when the function has </c><c props="height:0in; display:inline; font-weight:bold; width:0in; homogeneous:1">zero</c><c props="height:0in; display:inline; width:0in; homogeneous:1"> arguments.</c></p>
<p style="Code"><c props="height:0in; display:inline; width:0in; homogeneous:1">// a read trap<br/>$box.foo ++= function() { return 2 * cascade; }<br/><br/>// will output 10<br/>vexi.log.info($box.foo);</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; width:0in; homogeneous:1">Write Traps</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">Write traps are executed whenever a property is written to, in VexiCode.  Write traps are created when the assigned function has </c><c props="height:0in; display:inline; font-weight:bold; width:0in; homogeneous:1">one</c><c props="height:0in; display:inline; width:0in; homogeneous:1"> argument.</c></p>
<p style="Code"><c props="height:0in; display:inline; width:0in; homogeneous:1">// a write trap<br/>$box.bar ++= function(v) { cascade = 3 * v; }<br/><br/>$box.bar = 5;<br/><br/>// will output 15<br/>vexi.log.info($box.foo);</c></p>
<p style="Heading 2"><c props="height:0in; display:inline; width:0in; homogeneous:1">Trap Cascades</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">Multiple traps can be added on a single property.  The execution of the trap functions in order is called </c><c style="Emphasis" props="height:0in; display:inline; width:0in; homogeneous:1">cascading</c><c props="height:0in; display:inline; width:0in; homogeneous:1">.</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">The order of a trap cascade is the reverse of the order in which the traps are applied.</c></p>
<p style="Code"><c props="height:0in; display:inline; width:0in; homogeneous:1">// trap 1<br/>$box.prop ++= function(v) { vexi.log.info("FOO!"); }<br/><br/>// trap 2<br/>$box.prop ++= function(v) { vexi.log.info("BAR!"); }<br/><br/>// outputs BAR! then FOO!<br/>$box.prop = true;</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1">The cascade can be bypassed by appending an underscore to the property name.</c></p>
<p style="Code"><c props="height:0in; display:inline; width:0in; homogeneous:1">// trap 1<br/>$box._prop ++= function(v) { vexi.log.info("FOO!"); }<br/><br/>// trap 2<br/>$box.prop ++= function(v) { vexi.log.info("BAR!"); }<br/><br/>// outputs FOO! then BAR!<br/>$box.prop = true;</c></p>
<p style="Heading 1"><c props="height:0in; display:inline; width:0in; homogeneous:1"><pbr/>Events</c></p>
<p style="Normal"><c props="height:0in; display:inline; width:0in; homogeneous:1"><pbr/></c></p>
<p style="Normal" props="text-indent:0in; margin-left:0pt"></p>
</section>
</abiword>
